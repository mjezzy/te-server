import type { ErrorResponse } from "../errorResponse";
import { ClientHttpError } from "../httpError";
export declare const BAD_REQUEST_STATUS: 400;
export type BadRequestErrorResponse = ErrorResponse & {
    status: typeof BAD_REQUEST_STATUS;
};
/**
 * Runtime error thrown on HTTP Bad Request (400) response.
 *
 * @see {@link https://www.rfc-editor.org/rfc/rfc9110#status.400 | RFC 9110 (15.5.1.) 400 Bad Request}
 * @since 0.0.1
 */
export declare class BadRequestError extends ClientHttpError {
    constructor(responseMetadata: {
        status: number;
        statusText: string;
        headers: Headers;
        url: string;
    }, responseBody: string, message: string, options?: ErrorOptions);
    get response(): BadRequestErrorResponse;
}
export default BadRequestError;
