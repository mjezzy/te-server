/**
 * A subset of the {@link Response} type metadata.
 *
 * @since 0.0.1
 */
export type ResponseMetadata = Pick<Response, "headers" | "status" | "statusText" | "url" | "ok">;
/**
 * Relevant details of an HTTP error response.
 *
 * @since 0.0.1
 */
export type ErrorResponse = Readonly<ResponseMetadata & {
    ok: false;
    body: string;
}>;
/**
 * Extension to an Error thrown on an unsuccessful HTTP response
 * to link to a {@link ErrorResponse} instance.
 *
 * @since 0.0.1
 */
export interface WithErrorResponse {
    response: ErrorResponse;
}
/**
 * Type guard which, given an Error, checks whether it has a `response`
 * field conform to the {@link ErrorResponse} type.
 *
 * @example
 * ```
 * try {
 *  // ...
 * } catch (e) {
 *   if (hasErrorResponse(e)) {
 *     // e.response can safely be accessed.
 *   }
 * }
 * ```
 *
 * @alpha
 * @since 0.0.1
 * @param error the error being checked.
 * @returns whether the error has HTTP error details attached.
 */
export declare function hasErrorResponse(error: Error | WithErrorResponse): error is WithErrorResponse;
