import { ClientHttpError } from "./httpError";
/**
 * Map an HTTP error response to one of the Error classes exported by this library.
 *
 * @example
 * ```ts
 * const response = await fetch("https://example.org/resource");
 * if (!response.ok) {
 *   const responseBody = await response.text();
 *   throw handleErrorResponse(response, responseBody, "Fetch got error response");
 * }
 * ```
 *
 * @param responseMetadata the response metadata
 * @param responseBody the response body
 * @param message the error message
 * @returns an instance of the ClientHttpError subclass matching the response metadata status.
 * If the response status is unkown, the generic ClientHttpError class is used.
 * @since 0.0.1
 */
export declare function handleErrorResponse(responseMetadata: {
    status: number;
    statusText: string;
    headers: Headers;
    url: string;
}, responseBody: string, message: string): ClientHttpError;
export default handleErrorResponse;
