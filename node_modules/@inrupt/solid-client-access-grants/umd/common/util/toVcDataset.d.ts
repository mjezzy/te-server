import type { DatasetWithId, VerifiableCredential } from "@inrupt/solid-client-vc";
import type { UrlString } from "@inrupt/solid-client";
import type { AccessBaseOptions } from "../../gConsent";
/**
 * Converts a VC to a Dataset if possible. If VC is neither a URL, an RDFJS dataset,
 * nor a plain JSON VC, the returned value is undefined.
 * @param vc The input VC, which can be of types DatasetWithId, VerifiableCredential,
 * URL, UrlString or undefined.
 * @param options
 * @returns A promise that resolves to a DatasetWithId if the conversion is successful,
 * or undefined otherwise.
 */
export declare function toVcDataset(vc: DatasetWithId | VerifiableCredential | URL | UrlString | undefined, options?: AccessBaseOptions): Promise<DatasetWithId | undefined>;
