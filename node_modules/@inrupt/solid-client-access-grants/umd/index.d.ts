export type { DatasetWithId } from "@inrupt/solid-client-vc";
export type { AccessGrantWrapper } from "./common/index";
export type { AccessBaseOptions, AccessCredentialType, AccessGrant, AccessGrantContext, AccessRequest, ApproveAccessRequestOverrides, IssueAccessRequestParameters, RedirectToAccessManagementUiOptions, } from "./gConsent";
export type { AccessParameters } from "./gConsent/manage/getAccessGrantAll";
export type { AccessGrantAny } from "./type/AccessGrant";
export type { AccessModes } from "./type/AccessModes";
export type { CustomField } from "./type/CustomField";
export type { FetchOptions } from "./type/FetchOptions";
export type { RedirectOptions } from "./type/RedirectOptions";
export { CredentialIsAccessGrantAny } from "./type/AccessGrant";
export { approveAccessRequest, cancelAccessRequest, CredentialFilter, CredentialResult, AccessGrantStatus, AccessRequestStatus, CredentialType, denyAccessRequest, DURATION, getAccessApiEndpoint, getAccessGrant, getAccessGrantAll, getAccessGrantFromRedirectUrl, getAccessRequest, getAccessManagementUi, getAccessRequestFromRedirectUrl, issueAccessRequest, paginatedQuery, query, redirectToAccessManagementUi, redirectToRequestor, revokeAccessGrant, GRANT_VC_URL_PARAM_NAME, REDIRECT_URL_PARAM_NAME, REQUEST_VC_URL_PARAM_NAME, } from "./gConsent";
export * as gConsent from "./gConsent";
export { isValidAccessGrant } from "./common/verify";
export * as common from "./common";
export { fetchWithVc } from "./fetch";
export { createContainerInContainer, deleteFile, deleteSolidDataset, getFile, getSolidDataset, overwriteFile, saveFileInContainer, saveSolidDatasetAt, saveSolidDatasetInContainer, } from "./resource";
export { getAccessModes, getCustomBoolean, getCustomFloat, getCustomFields, getCustomInteger, getCustomString, getExpirationDate, getId, getIssuanceDate, getIssuer, getRequestor, getResourceOwner, getResources, getTypes, getPurposes, getCredentialSubject, getInbox, getInherit, } from "./common/index";
