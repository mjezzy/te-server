export declare const SUPPORTED_CONTEXTS: readonly ["https://schema.inrupt.com/credentials/v1.jsonld", "https://schema.inrupt.com/credentials/v2.jsonld"];
export declare const DEFAULT_CONTEXT: (typeof SUPPORTED_CONTEXTS)[number];
export type AccessProvider = {
    context: (typeof SUPPORTED_CONTEXTS)[number] | string;
};
/**
 * This is an internal function to avoid having to mock fetch on all tests.
 * @hidden
 */
export declare function cacheProvider(url: string, provider: AccessProvider): void;
/**
 * This is an internal function to avoid having to mock fetch on all tests.
 * @hidden
 */
export declare function clearProviderCache(): void;
/**
 * This internal function negotiates the most recent context supported by both the provider and the client.
 * It also caches the result in memory so that the VC provider configuration is only fetched once.
 * FIXME: use proper caching for eventual eviction.
 */
export declare function getIssuerContext(issuer: URL): Promise<(typeof SUPPORTED_CONTEXTS)[number] | undefined | string>;
export declare const buildProviderContext: (issuer: URL) => Promise<Array<string>>;
