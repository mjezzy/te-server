import { saveSolidDatasetAt as solidClientSaveSolidDatasetAt, type SolidDataset, type UrlString } from "@inrupt/solid-client";
import type { DatasetWithId, VerifiableCredential } from "@inrupt/solid-client-vc";
export type solidClientSaveSolidDatasetAtType = typeof solidClientSaveSolidDatasetAt;
/**
 * Saves a Dataset in a Solid Pod using an Access Grant to prove the caller is
 * authorized to write or append to the dataset at the given dataset URL.
 *
 * ```{note}
 * This function does not support saving a dataset if the
 * dataset does not yet exist, unlike its `@inrupt/solid-client`
 * counterpart.
 * ```
 *
 * @see [@inrupt/solid-client's
 * saveSolidDatasetAt](https://docs.inrupt.com/developer-tools/api/javascript/solid-client/modules/resource_solidDataset.html#savesoliddatasetat)
 *
 * @param datasetUrl The URL of the dataset to save.
 * @param accessGrant The Access Grant VC proving the caller is authorized.
 * @param options Optional properties to customise the request behaviour.
 * @returns A promise that resolves to a SolidDataset if successful, and that
 * rejects otherwise.
 * @since 0.4.0
 */
export declare function saveSolidDatasetAt<Dataset extends SolidDataset>(datasetUrl: UrlString, solidDataset: Dataset, accessGrant: VerifiableCredential | DatasetWithId, options?: Parameters<typeof solidClientSaveSolidDatasetAt>[2]): ReturnType<solidClientSaveSolidDatasetAtType>;
