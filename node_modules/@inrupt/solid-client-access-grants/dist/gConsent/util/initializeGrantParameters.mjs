import { getCredentialSubject, getIssuanceDate, getExpirationDate } from '@inrupt/solid-client-vc';
import { DataFactory } from 'n3';
import { INHERIT, XSD_BOOLEAN } from '../../common/constants.mjs';
import { getAccessModes, getResources, getInbox, getPurposes, getCustomFields, getConsent } from '../../common/getters.mjs';
import '@inrupt/solid-client-errors';
import { toJson } from '../../type/CustomField.mjs';

//
// Copyright Inrupt Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
const { quad, literal, defaultGraph } = DataFactory;
const inheritQuad = (subject, inherit) => quad(subject, INHERIT, literal(inherit ? "true" : "false", XSD_BOOLEAN), defaultGraph());
function getInherit(vc) {
    if (vc.has(inheritQuad(getConsent(vc), true))) {
        return true;
    }
    if (vc.has(inheritQuad(getConsent(vc), false))) {
        return false;
    }
    return undefined;
}
function initializeGrantParameters(requestVc, requestOverride) {
    const resultGrant = requestVc === undefined
        ? {
            ...requestOverride,
            customFields: toJson(requestOverride?.customFields),
            // The type assertion here reflects the constraints put in the overload of
            // approveAccessRequest.
        }
        : {
            requestor: requestOverride?.requestor ?? getCredentialSubject(requestVc).value,
            access: requestOverride?.access ?? getAccessModes(requestVc),
            resources: requestOverride?.resources ?? getResources(requestVc),
            requestorInboxUrl: requestOverride?.requestorInboxUrl ?? getInbox(requestVc),
            issuanceDate: requestOverride?.issuanceDate ?? getIssuanceDate(requestVc),
            purpose: requestOverride?.purpose ?? getPurposes(requestVc),
            expirationDate: requestOverride?.expirationDate ?? getExpirationDate(requestVc),
            inherit: requestOverride?.inherit ?? getInherit(requestVc),
            customFields: requestOverride?.customFields !== undefined
                ? {
                    ...getCustomFields(requestVc),
                    ...toJson(requestOverride?.customFields),
                }
                : getCustomFields(requestVc),
        };
    if (requestOverride?.expirationDate === null) {
        resultGrant.expirationDate = undefined;
    }
    return resultGrant;
}

export { initializeGrantParameters };
